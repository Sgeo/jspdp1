<html>
<head>
<title>Spacewar! - Original 1962 code on PDP-1 emulator</title>
<meta name="keywords" content="Spacewar, game, original, PDP-1, emulator, gerasimov, silverman, Graetz, Russell, Wiitanen">
<meta http-equiv="X-UA-Compatible" content="IE=9" />
<style type="text/css">@import "spacewar.css";</style>
<script type="text/javascript" src="pdp1console.js"></script>
<script type="text/javascript" src="spacewar.js"></script>
<script type="text/javascript" src="spacewar.bin.js"></script>
<script type="text/javascript" src="ptr.js"></script>
<script type="text/javascript">
  if (!document.createElement('canvas').getContext) {
    window.location = "nocanvas.html";
  }
</script>
</head>

<body onload="setup();">
<h1><font face="Arial"><font size="5">Spacewar!</font><br>
<font size="3">Original 1962 game code running on a PDP-1 emulator in JavaScript</font></font></h1>
<h1><a href = "readme.html"><font face="Arial" size="3">Readme</font></a></h1><p>
<div class="frame" id="frame">
<div class="spacewar">
<canvas class="spacewar" id="swcanvas"></canvas>
</div>
</div>
<div id="console">
  <div>EXTENSION and PROGRAM COUNTER</div>
  <div>
    <input type="checkbox" disabled data-console="bank">
    |
    <input type="checkbox" disabled data-console="bank">
    <input type="checkbox" disabled data-console="bank">
    <input type="checkbox" disabled data-console="bank">
    |
    <input type="checkbox" disabled data-console="pc">
    <input type="checkbox" disabled data-console="pc">
    <input type="checkbox" disabled data-console="pc">
    |
    <input type="checkbox" disabled data-console="pc">
    <input type="checkbox" disabled data-console="pc">
    <input type="checkbox" disabled data-console="pc">
    |
    <input type="checkbox" disabled data-console="pc">
    <input type="checkbox" disabled data-console="pc">
    <input type="checkbox" disabled data-console="pc">
    |
    <input type="checkbox" disabled data-console="pc">
    <input type="checkbox" disabled data-console="pc">
    <input type="checkbox" disabled data-console="pc">
  </div>
  <div>EXTENSION and MEMORY ADDRESS</div>
  <div>
    <input type="checkbox" disabled data-console="ma">
    |
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
    |
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
    |
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
    |
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
    |
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
    <input type="checkbox" disabled data-console="ma">
  </div>
  <div>
    MEMORY BUFFER (not implemented)
  </div>
  <div>
    ACCUMULATOR
  </div>
  <div>
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    |
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    |
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    |
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    |
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    |
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
    <input type="checkbox" disabled data-console="ac">
  </div>
  <div>
    IN - OUT
  </div>
  <div>
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    |
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    |
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    |
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    |
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    |
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
    <input type="checkbox" disabled data-console="io">
  </div>
  <div>
    EXTENSION and ADDRESS
  </div>
  <div>
    <input type="checkbox"  data-console="ta">
    |
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
    |
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
    |
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
    |
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
    |
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
    <input type="checkbox"  data-console="ta">
  </div>
  <div>
    TEST WORD
  </div>
  <div>
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    |
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    |
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    |
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    |
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    |
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
    <input type="checkbox"  data-console="tw">
  </div>
</div>
<button onclick="running = true;" disabled>START (not working yet)</button>
<button onclick="running = false;">STOP</button>
<button onclick="running = true;">CONTINUE</button>
<button onclick="ptr.rim();">READ IN</button>
<label for="tape">Load tape...</label><input type="file" id="tape">
<button id="autotest">Test (insert digital-1-12-m-rim.bin first)</button>
<script>
  document.querySelector("#autotest").addEventListener("click", async function() {
    function waitForHalt() {
      return new Promise((resolve, reject) => {
        let timer = setInterval(function() {
          if(!running) {
            clearInterval(timer);
            resolve();
          }
        }, 30);
      });
    }
    running = false;
    sense.fill(false);
    ptr.rim();
    running = true;
    await waitForHalt(); // Program 2's HLT test.
    // Skip rest of program 2
    sense.fill(true);
    sense[0] = false;
    sense[1] = false;
    testWord = 0o777777;
    ptr.rim();
    running = true;
    await waitForHalt();
    alert(`Program: ${oct(memory[0])}\nMA: ${oct(ma)}`);
  });
</script>
<script>
  document.querySelector("#tape").addEventListener("change", async function(event) {
    if(event.target.files.length > 0) {
      let buffer = await event.target.files[0].arrayBuffer();
      ptr.load(new Uint8Array(buffer));
    }
  });
</script>
</body>
</html>
