<html>
<head>
<title>JS-PDP-1</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width">
<meta name="keywords" content="Spacewar, game, original, PDP-1, emulator, gerasimov, silverman, Graetz, Russell, Wiitanen">
<meta http-equiv="X-UA-Compatible" content="IE=9" />
<style type="text/css">@import "main.css";</style>
<style>
  .console-container {
    display: flex;
    flex-direction: row;
  }
  .console-column-container {
    display: flex;
    flex-direction: column
  }
  .console-bits-container {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
  }
  .outputs  {
    display: flex;
    flex-direction: row
  }
</style>
<script type="text/javascript" src="pdp1console.js"></script>
<script type="text/javascript" src="pdp1audio.js"></script>
<script type="text/javascript" src="pdp1term.js"></script>
<script type="text/javascript" src="main.js"></script>
<script type="text/javascript" src="spacewar.bin.js"></script>
<script type="text/javascript" src="ptr.js"></script>
<script type="text/javascript">
  if (!document.createElement('canvas').getContext) {
    window.location = "nocanvas.html";
  }
</script>
</head>

<body onload="setup();">
<h1><font face="Arial"><font size="5">JS-PDP-1</font><br>
<font size="3">Javascript PDP-1 emulator.</font></font></h1>
<h1><a href = "https://spacewar.oversigma.com/"><font face="Arial" size="3">Based on a Javascript PDP-1 emulator by Barry Silverman, Brian Silverman, and Vadim Gerasimov</font></a></h1><p>
<div class="outputs">
<div class="frame" id="frame">
<div class="crt">
<canvas class="crt" id="swcanvas"></canvas>
</div>
</div>
<div id="termframe"></div>
</div>
<div id="console" class="console-container">
  <div class="console-column-container">
    <div>EXTENSION and PROGRAM COUNTER</div>
    <div class="console-bits-container">
      <input type="checkbox" disabled data-console="bank">
      |
      <input type="checkbox" disabled data-console="bank">
      <input type="checkbox" disabled data-console="bank">
      <input type="checkbox" disabled data-console="bank">
      |
      <input type="checkbox" disabled data-console="pc">
      <input type="checkbox" disabled data-console="pc">
      <input type="checkbox" disabled data-console="pc">
      |
      <input type="checkbox" disabled data-console="pc">
      <input type="checkbox" disabled data-console="pc">
      <input type="checkbox" disabled data-console="pc">
      |
      <input type="checkbox" disabled data-console="pc">
      <input type="checkbox" disabled data-console="pc">
      <input type="checkbox" disabled data-console="pc">
      |
      <input type="checkbox" disabled data-console="pc">
      <input type="checkbox" disabled data-console="pc">
      <input type="checkbox" disabled data-console="pc">
    </div>
    <div>EXTENSION and MEMORY ADDRESS</div>
    <div class="console-bits-container">
      <input type="checkbox" disabled data-console="ma">
      |
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
      |
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
      |
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
      |
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
      |
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
      <input type="checkbox" disabled data-console="ma">
    </div>
    <div>
      MEMORY BUFFER (not implemented)
    </div>
    <div>
      ACCUMULATOR
    </div>
    <div class="console-bits-container">
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      |
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      |
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      |
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      |
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      |
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
      <input type="checkbox" disabled data-console="ac">
    </div>
    <div>
      IN - OUT
    </div>
    <div class="console-bits-container">
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      |
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      |
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      |
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      |
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      |
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
      <input type="checkbox" disabled data-console="io">
    </div>
    <div>
      EXTENSION and ADDRESS
    </div>
    <div class="console-bits-container" data-console-test-input="testAddress">
      <input type="checkbox"  data-console="ta">
      |
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
      |
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
      |
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
      |
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
      |
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
      <input type="checkbox"  data-console="ta">
    </div>
    <div>
      TEST WORD
    </div>
    <div class="console-bits-container" data-console-test-input="testWord">
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      |
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      |
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      |
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      |
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      |
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
      <input type="checkbox"  data-console="tw">
    </div>
    <div>
      <button onclick="pdp1console.start();">START</button>
      <button onclick="pdp1console.stop();">STOP</button>
      <button onclick="pdp1console.continue();">CONTINUE</button>
      <button onclick="pdp1console.examine();">EXAMINE</button>
      <button onclick="pdp1console.deposit();">DEPOSIT</button>
      <button onclick="ptr.rim();">READ IN</button>
    </div>
  </div>
  <div class="console-column-container">
    <label><input type="checkbox" disabled data-console="running">RUN</label>
    <label><input type="checkbox" disabled data-console="ov">OVER FLOW</label>
    <label><input type="checkbox" disabled data-console="extend">EXTEND</label>
  </div>
  <div class="console-column-container">
    <div>SENSE SWITCHES</div>
    <div class="console-bits-container" data-console-input="sense">
      <input type="checkbox" data-console="sense">
      <input type="checkbox" data-console="sense">
      <input type="checkbox" data-console="sense">
      <input type="checkbox" data-console="sense">
      <input type="checkbox" data-console="sense">
      <input type="checkbox" data-console="sense">
    </div>
    <div>PROGRAM FLAGS</div>
    <div class="console-bits-container">
      <input type="checkbox" disabled data-console="pf">
      <input type="checkbox" disabled data-console="pf">
      <input type="checkbox" disabled data-console="pf">
      <input type="checkbox" disabled data-console="pf">
      <input type="checkbox" disabled data-console="pf">
      <input type="checkbox" disabled data-console="pf">
    </div>
  </div>
  <div class="console-column-container">
    <div id="tape-status"></div>
    <script>
      function tapeStatus(str) {
        document.querySelector("#tape-status").innerText = str;
      }
    </script>
    <label><button onclick="pdp1audio.enable()" id="enableaudio">Enable audio</button></label>
    <details>
      <summary>Music players</summary>
      <button data-tape="pdp1m13.rim">pdp1m13.rim</button>
    </details>
    <details>
      <summary>Music (intermediate)</summary>
      <button data-tape="trioSonataI_intermediate.bin">trioSonataI_intermediate.bin</button>
      <button data-tape="trioSonataIII_intermediate.bin">trioSonataIII_intermediate.bin</button>
      <button data-tape="trioSonataIV_intermediate.bin">trioSonataIV_intermediate.bin</button>
    </details>
    <details>
      <summary>Utilities</summary>
      <button data-tape="digital-1-12-m-rim.bin">digital-1-12-m-rim.bin</button>
      <button id="autotest">Test (insert digital-1-12-m-rim.bin first)</button>
    </details>
    <script>
      for(let tapeButton of document.querySelectorAll("button[data-tape]")) {
        tapeButton.addEventListener("click", async function() {
          tapeStatus("Loading tape...");
          try {
            let arrayBuffer = await fetch(`tapes/${this.dataset.tape}`).then(r => r.arrayBuffer());
            ptr.load(new Uint8Array(arrayBuffer));
            tapeStatus("Tape loaded!");
          } catch(e) {
            console.error(e);
            tapeStatus(`Error loading tape: ${e}`);
          }
        });
      }
    </script>
    <label>Load tape...<input type="file" id="tape"></label>
    <script>
      document.querySelector("#autotest").addEventListener("click", async function() {
        function waitForHalt() {
          return new Promise((resolve, reject) => {
            let timer = setInterval(function() {
              if(!running) {
                clearInterval(timer);
                resolve();
              }
            }, 30);
          });
        }
        running = false;
        _sense.fill(false);
        ptr.rim();
        running = true;
        await waitForHalt(); // Program 2's HLT test.
        // Skip rest of program 2
        _sense.fill(true);
        _sense[0] = false;
        _sense[1] = false;
        testWord = 0o777777;
        ptr.rim();
        running = true;
        await waitForHalt();
        alert(`Program: ${oct(memory[0])}\nMA: ${oct(ma)}`);
      });
    </script>
    <script>
      document.querySelector("#tape").addEventListener("change", async function(event) {
        if(event.target.files.length > 0) {
          let buffer = await event.target.files[0].arrayBuffer();
          ptr.load(new Uint8Array(buffer));
        }
      });
    </script>
  </div>
  <div class="console-column-container">
    <div>OPTIONS</div>
    <label>Hardware MUL/DIV<input type="checkbox" id="muldiv-checkbox"></label>
    <script>
      document.querySelector("#muldiv-checkbox").addEventListener("change", function(e) {
        window.MULDIV = this.checked;
      });
    </script>
    <label>Display jitter<input type="number" value="1" id="jitter-input"></label>
    <script>
      document.querySelector("#jitter-input").addEventListener("change", function(e) {
        window.JITTER = parseInt(this.value);
      });
    </script>
    <label>Lightpen radius<input type="number" value="3" id="lightpen-radius-input"></label>
    <script>
      document.querySelector("#lightpen-radius-input").addEventListener("change", function(e) {
        window.LIGHTPEN_RADIUS = parseInt(this.value);
      });
    </script>
  </div>
</div>
<div>
  <h1>Instructions</h1>
  <details>
    <summary>Music</summary>
    <p>pdp1m13 and usage instructions from Peter Samson. Uncertainty regarding usage is my own.</p>
    <ol>
      <li>Enable audio
      <li>Load pdp1m13.rim
      <li>READ IN, to start the music program running.
      <li>Load a music tape (intermediate, not compiled).
      <li>Set address to 4. (Check the left button of the rightmost group for ADDRESS)
      <li>Set sense switch 1 (the leftmost one) on.
      <li>Press Start once for each voice on the tape. I'm not certain how to determine this, I think there are 3 voices on the trio Sonata tapes.
      <li>Turn off sense switch 1.
      <li>Press Start.
    </ol>
  </details>
</div>
</body>
</html>
